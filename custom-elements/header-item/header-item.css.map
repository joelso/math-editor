{"version":3,"sources":["header-item.css","../../scss/mixins/_reset-small.scss","header-item.scss","../../scss/mixins/_size.scss","../../scss/mixins/_position.scss"],"names":[],"mappings":"AAAA,qFAAoF;ACApF;EAOI,gBAAS;EACT,WAAQ;EACR,YAAS;EACT,oBAAU,EAAA;;ADHd,sFAAqF;ACMrF;EACI,wBAAY;EACZ,YAAS,EAAA;;ADHb,sFAAqF;ACMrF;EAMI,yBAAY;EACZ,WAAQ;EACR,iBAAW;EACX,WAAQ;EACR,YAAS;EACT,0BAAgB,EAAA;;ADRpB,sFAAqF;ACWrF;EACI,aAAO,EAAA;;ADRX,mBAAkB;AAClB,sFAAqF;ACWrF;EACI,aAAO,EAAA;;ADRX,sBAAqB;AACrB,sFAAqF;ACWrF;EACI,aAAO,EAAA;;ADRX,oBAAmB;AACnB,sFAAqF;ACWrF;EACI,aAAO,EAAA;;ADRX,mGAAkG;AEhClG;EACI,sBAAY,EAAA;EFkCd,oGAAmG;EElCrG;IAGQ,0BAAY,EAAA;;AFmCpB,oGAAmG;AE/BnG;ECfI,aDiBc;EChBd,cDgBoB,EAAA;;AFkCxB,oGAAmG;AE/BnG;EAEI,gBAAS;EACT,kBAnBS;EAoBT,4CAvBA;EAwBA,oBAAU;ECzBV,aDGG;ECFH,cDCE,EAAA;EFyDJ,oGAAmG;EEjCrG;IAEQ,cAAS;IACT,oDAAe;IACf,qCAAoB;IACpB,sCAAqB;IACrB,oBAAU;IACV,YA7BK;ICJT,UDkCkB;ICjClB,WDiCqB,EAAA;EFmCvB,oGAAmG;EElCrG;IAEQ,aAAS;IACT,UAAO;IACP,oBAAU;IACV,eApCK;IAqCL,iDAAY;IACZ,qCAAoB;IACpB,sCAAqB,EAAA;EFmC3B,oGAAmG;EElCrG;IAEQ,4CA7CJ;IA8CI,qBAAe;IACf,iBAAY;IACZ,YAAS;IACT,gBAAS;IErCb,oBFsCsB;IEhClB,YAXE;IAkBF,YAjBI;IDTR,aDGG;ICFH,cDEG,EAAA;EFuFL,oGAAmG;EErCrG;IAEQ,+BAAkB,EAAA;IFsCtB,oGAAmG;IEtCvG;MAEY,YAAS,EAAA;IFuCjB,oGAAmG;IEtCvG;MAGY,YAAS,EAAA;IFsCjB,oGAAmG;IErCvG;MAEY,oCAAW;cAAX,4BAAW;MACX,sBAAY,EAAA;EFsCtB,oGAAmG;EEpCrG;IAEQ,sCAAW;YAAX,8BAAW,EAAA;;AFsCnB,oGAAmG;AElCnG;EACI,wCAAkB,EAAA;EFoCpB,oGAAmG;EEpCrG;IAEQ,2CAAqB,EAAA;EFqC3B,oGAAmG;EEpCrG;IAES,wCAAkB,EAAA;;;AFuC3B,0wDAAywD","file":"header-item.css","sourceRoot":"/source/","sourcesContent":[null,"glitch-effect,\nmatrix-canvas,\nheader-item,\ninput-demo,\ncontent-home,\nrealtime-formula,\nformula-editor {\n    display: block;\n    margin: 0;\n    padding: 0;\n    position: relative;\n}\n\n* {\n    box-sizing: border-box;\n    outline: 0;\n}\n\ndiv, span,\nh1, h2, h3,\nimg,\nform, label,\narticle, canvas, details,\nfooter, header, hgroup, menu, nav, section {\n    background: transparent;\n    border: 0;\n    font-size: 100%;\n    margin: 0;\n    padding: 0;\n    vertical-align: baseline;\n}\n\na:link {\n    color: #fff;\n}\n\n/* visited link */\na:visited {\n    color: #fff;\n}\n\n/* mouse over link */\na:hover {\n    color: #fff;\n}\n\n/* selected link */\na:active {\n    color: #fff;\n}","@import '../../scss/mixins/reset-small';\n@import '../../scss/mixins/utils';\n$bg:rgba(248, 248, 255, .3);\n$side:40px;\n$width:70px;\n$borderWidth:20px; //sqrt(pow($side, 2px) - pow($width/2px, 2));\n$selectedColor: #0F0;\n\n* {\n    transition: all .5s; // should target specific properties\n\n    &::before, &::after {\n        transition: opacity .5s;\n    }\n}\n\n#logo,\nimg {\n    @include size(100%, 100%);\n}\n\n// http://jtauber.github.io/articles/css-hexagon.html\n.hex {\n    display: block;\n    margin-top: $borderWidth;\n    background-color: $bg;\n    position: relative;\n    @include size($width, $side);\n    &::before {\n        content: \" \";\n        border-bottom: $borderWidth solid $bg;\n        border-left: $width/2 solid transparent;\n        border-right: $width/2 solid transparent;\n        position: absolute;\n        top: -$borderWidth;\n        @include size(0, 0);\n    }\n    &::after {\n        content: \"\";\n        width: 0;\n        position: absolute;\n        bottom: -$borderWidth;\n        border-top: $borderWidth solid $bg;\n        border-left: $width/2 solid transparent;\n        border-right: $width/2 solid transparent;\n    }\n    #background-circle {\n        background-color: $bg;\n        border-radius: 50px;\n        margin-top: 5px;\n        opacity: 0;\n        display: block;\n        @include position(absolute, -20px 0px 0 0);\n        @include size($width, $width);\n    }\n    &:not(.selected):hover {\n        background-color: transparent;\n        #background-circle {\n            opacity: 1;\n        }\n        &::before,\n        &::after {\n            opacity: 0;\n        }\n        img {\n            transform: scale(1.2, 1.2);\n            transition: all .1s;\n        }\n    }\n    &:active #logo {\n        transform: translate(0, 2px);\n    }\n}\n\n.hex.selected {\n    background-color: rgba($selectedColor, .5);\n    &::before {\n        border-bottom-color: rgba($selectedColor, .5);\n    }\n    &::after {\n         border-top-color: rgba($selectedColor, .5);\n    }\n}","@mixin size($width, $height) {\n    width: $width;\n    height: $height;\n}","// Copied from Bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/dist/addons/_position.scss\n@mixin position ($position: relative, $coordinates: 0 0 0 0) {\n\n    @if type-of($position) == list {\n        $coordinates: $position;\n        $position: relative;\n    }\n\n    $top: nth($coordinates, 1);\n    $right: nth($coordinates, 2);\n    $bottom: nth($coordinates, 3);\n    $left: nth($coordinates, 4);\n\n    position: $position;\n\n    @if $top == auto {\n        top: $top;\n    }\n    @else if not(unitless($top)) {\n        top: $top;\n    }\n\n    @if $right == auto {\n        right: $right;\n    }\n    @else if not(unitless($right)) {\n        right: $right;\n    }\n\n    @if $bottom == auto {\n        bottom: $bottom;\n    }\n    @else if not(unitless($bottom)) {\n        bottom: $bottom;\n    }\n\n    @if $left == auto {\n        left: $left;\n    }\n    @else if not(unitless($left)) {\n        left: $left;\n    }\n}"]}